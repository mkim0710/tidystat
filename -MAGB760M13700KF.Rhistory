# ~paste0(paste(c("|->", rep("\t", .x-0)), collapse = ""), .y) %>% paste(collapse = "\n")
~rep("\t", .x-0) %>% paste(collapse = "") %>% paste0(.y) %>% paste(collapse = "\n")
)
)
, print_tree_path_files.r =
paste0(
"@",
print_tree_path,
"/\n",
map2_chr(
path.level,
files.r,
# ~paste0(paste(c("|->", rep("\t", .x-0)), collapse = ""), .y) %>% paste(collapse = "\n")
~rep("\t", .x-0) %>% paste(collapse = "") %>% paste0(.y) %>% paste(collapse = "\n")
)
)
, print_tree_path_files.rmd =
paste0(
"@",
print_tree_path,
"/\n",
map2_chr(
path.level,
files.rmd,
# ~paste0(paste(c("|->", rep("\t", .x-0)), collapse = ""), .y) %>% paste(collapse = "\n")
~rep("\t", .x-0) %>% paste(collapse = "") %>% paste0(.y) %>% paste(collapse = "\n")
)
)
, print_tree_path_files.rds =
paste0(
"@",
print_tree_path,
"/\n",
map2_chr(
path.level,
files.rds,
# ~paste0(paste(c("|->", rep("\t", .x-0)), collapse = ""), .y) %>% paste(collapse = "\n")
~rep("\t", .x-0) %>% paste(collapse = "") %>% paste0(.y) %>% paste(collapse = "\n")
)
)
, print_tree_path_files.rda =
paste0(
"@",
print_tree_path,
"/\n",
map2_chr(
path.level,
files.rda,
# ~paste0(paste(c("|->", rep("\t", .x-0)), collapse = ""), .y) %>% paste(collapse = "\n")
~rep("\t", .x-0) %>% paste(collapse = "") %>% paste0(.y) %>% paste(collapse = "\n")
)
)
) %>%
as.tibble
df_out = df_dirs_recursive.ls_files2
} else {
df_out = df_dirs_recursive0
}
return(df_out)
}
#@ end -----
ls.str(env.custom) #-----
ls.str(env.custom$env.fun.hidden) #-----
#@ end ----
# #@ source(file.path(env.custom$source$source01$path, env.custom$source$source01$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
# env.custom$source = list()
# env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
# env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
# env.custom$source$source01 = list()
# env.custom$source$source01$objectname = "env.custom.fun.t.tribble_construct"
# env.custom$source$source01$filename = paste0(env.custom$source$source01$objectname, ".source.r")
# env.custom$source$source01$subpath = ""
# env.custom$source$source01$path = paste0(env.custom$source$path_local, env.custom$source$source01$subpath)
# # env.custom$source$source01$path = paste0(env.custom$source$path_github, env.custom$source$source01$subpath)
#
# t0 = Sys.time()
# source(file.path(env.custom$source$source01$path, env.custom$source$source01$filename))
# Sys.time() - t0 # Time difference of 0.6328301  secs
#@ end ----
#@ source(file.path(env.custom$source$source10$path, env.custom$source$source10$filename)) ----
if(!exists("env.custom")) env.custom = new.env()
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$source10 = list()
env.custom$source$source10$objectname = "f_path.df_dirs_recursive.df_files"
env.custom$source$source10$filename = paste0(env.custom$source$source10$objectname, ".source.r")
env.custom$source$source10$subpath = ""
env.custom$source$source10$path = paste0(env.custom$source$path_local, env.custom$source$source10$subpath)
# env.custom$source$source10$path = paste0(env.custom$source$path_github, env.custom$source$source10$subpath)
t0 = Sys.time()
source(file.path(env.custom$source$source10$path, env.custom$source$source10$filename))
Sys.time() - t0 # Time difference of 0.6328301  secs
ls.str(env.custom) #-----
ls.str(env.custom$env.fun.hidden) #-----
ls(env.custom)
ls(env.custom) %>% dput
env.custom %>% ls%>% dput
#@ end -----
library(tidyverse)
env.custom %>% ls %>% dput
c("f_path.df_dirs_recursive.df_files", "gitignore_escaped_select.UC")
ls.str(env.custom)[c("f_path.df_dirs_recursive.df_files", "gitignore_escaped_select.UC")]
ls.str(env.custom[c("f_path.df_dirs_recursive.df_files", "gitignore_escaped_select.UC")])
?ls.str
ls.str(env.custom, c("f_path.df_dirs_recursive.df_files", "gitignore_escaped_select.UC"))
ls.str(env.custom, name = c("f_path.df_dirs_recursive.df_files", "gitignore_escaped_select.UC"))
ls.str(env.custom, name = c("f_path.df_dirs_recursive.df_files", "gitignore_escaped_select.UC")) %>% str
ls.str(env.custom) %>% str_subset(objectname_created)
env.custom %>% ls %>% dput
objectname_created = c("f_path.df_dirs_recursive.df_files", "gitignore_escaped_select.UC")
ls.str(env.custom) %>% str_subset(objectname_created)
ls.str(env.custom) %>% str
ls.str(env.custom)[ls.str(env.custom) %in% objectname_created]
ls.str(env.custom)
ls.str(env.custom)
env.custom %>% ls %>% dput
if(!exists("env.custom")) env.custom = new.env()
# if(!exists("env.custom")) env.custom = list()
if(!exists("env.custom$info")) env.custom$info = list()
env.custom = env.custom %>% as.list
#@ end ----
#@ source(file.path(env.custom$source$source10$path, env.custom$source$source10$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
env.custom = env.custom %>% as.environment
# https://github.com/mkim0710/tidystat/blob/master/Rdev/get_system_info.dev.r
# https://github.com/mkim0710/tidystat/blob/master/Rdev/00_base_program/function.get_cpu_internal.dev.r
# https://github.com/mkim0710/tidystat/blob/master/Rdev/00_base_program/function.checkpoint.dev.r
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
if(!exists("env.custom$info")) env.custom$info = list()
#% get_system_info() ====
env.custom$info$get_system_info = function() {
summary_list = list(
GUI = .Platform$GUI,
os_type = .Platform$OS.type,
os_sysname = as.character(Sys.info()["sysname"]),
os_version = as.character(Sys.info()["version"]),
machine_type = as.character(Sys.info()["machine"]),
machine_nodename = as.character(Sys.info()["nodename"]),
machine_cpu = if (.Platform$OS.type == "unix" & Sys.info()["sysname"] == "Darwin")
trimws(system("sysctl -n machdep.cpu.brand_string", intern=TRUE))
else if (.Platform$OS.type == "unix" & Sys.info()["sysname"] == "Linux")
trimws(system("awk '/model name/' /proc/cpuinfo | uniq | awk -F': ' '{print $2}'", intern=TRUE))
else if (.Platform$OS.type == "windows")
trimws(system("wmic cpu get name", intern=TRUE)[2])
else NA,
Sys.getlocale = list(
LC_COLLATE = Sys.getlocale(category = "LC_COLLATE"),
LC_CTYPE = Sys.getlocale(category = "LC_CTYPE"),
LC_locale_NUMERIC = Sys.getlocale(category = "LC_NUMERIC"),
LC_locale_TIME = Sys.getlocale(category = "LC_TIME")
),
l10n_info = list(
localization_UTF8 = l10n_info()$`UTF-8`,
localization_Latin1 = l10n_info()$`Latin-1`,
localization_codeset = l10n_info()$codeset,
localization_codepage = l10n_info()$codepage,
localization_system.codepage = l10n_info()$system.codepage
)
)
}
#@ end -----
ls.str(env.custom) #-----
ls.str(env.custom$env.fun.hidden) #-----
#@ end -----
ls.str(env.custom) #-----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$info")) env.custom$info = list()
# https://github.com/mkim0710/tidystat/blob/master/Rdev/get_system_info.dev.r
# https://github.com/mkim0710/tidystat/blob/master/Rdev/00_base_program/function.get_cpu_internal.dev.r
# https://github.com/mkim0710/tidystat/blob/master/Rdev/00_base_program/function.checkpoint.dev.r
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
# if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$env.internal")) env.custom$env.internal = new.env()
if(!exists("env.custom$info")) env.custom$info = list()
#% get_system_info() ====
env.custom$info$get_system_info = function() {
summary_list = list(
GUI = .Platform$GUI,
os_type = .Platform$OS.type,
os_sysname = as.character(Sys.info()["sysname"]),
os_version = as.character(Sys.info()["version"]),
machine_type = as.character(Sys.info()["machine"]),
machine_nodename = as.character(Sys.info()["nodename"]),
machine_cpu = if (.Platform$OS.type == "unix" & Sys.info()["sysname"] == "Darwin")
trimws(system("sysctl -n machdep.cpu.brand_string", intern=TRUE))
else if (.Platform$OS.type == "unix" & Sys.info()["sysname"] == "Linux")
trimws(system("awk '/model name/' /proc/cpuinfo | uniq | awk -F': ' '{print $2}'", intern=TRUE))
else if (.Platform$OS.type == "windows")
trimws(system("wmic cpu get name", intern=TRUE)[2])
else NA,
Sys.getlocale = list(
LC_COLLATE = Sys.getlocale(category = "LC_COLLATE"),
LC_CTYPE = Sys.getlocale(category = "LC_CTYPE"),
LC_locale_NUMERIC = Sys.getlocale(category = "LC_NUMERIC"),
LC_locale_TIME = Sys.getlocale(category = "LC_TIME")
),
l10n_info = list(
localization_UTF8 = l10n_info()$`UTF-8`,
localization_Latin1 = l10n_info()$`Latin-1`,
localization_codeset = l10n_info()$codeset,
localization_codepage = l10n_info()$codepage,
localization_system.codepage = l10n_info()$system.codepage
)
)
}
#@ end -----
ls.str(env.custom) #-----
# > ls.str(env.custom) #-----
# info : List of 1
#  $ get_system_info:function ()
#@ end ----
#@ source(file.path(env.custom$source$source01$path, env.custom$source$source01$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$source01 = list()
env.custom$source$source01$objectname = "get_system_info"
env.custom$source$source01$filename = paste0(env.custom$source$source01$objectname, ".source.r")
env.custom$source$source01$subpath = ""
env.custom$source$source01$path = paste0(env.custom$source$path_local, env.custom$source$source01$subpath)
# env.custom$source$source01$path = paste0(env.custom$source$path_github, env.custom$source$source01$subpath)
# t0 = Sys.time()
# source(file.path(env.custom$source$source01$path, env.custom$source$source01$filename))
# Sys.time() - t0 # Time difference of 0.6328301  secs
t0 = Sys.time()
source(file.path(env.custom$source$source01$path, env.custom$source$source01$filename))
Sys.time() - t0 # Time difference of 0.6328301  secs
ls.str(env.custom)
# https://github.com/mkim0710/tidystat/blob/master/Rdev/get_system_info.dev.r
# https://github.com/mkim0710/tidystat/blob/master/Rdev/00_base_program/function.get_cpu_internal.dev.r
# https://github.com/mkim0710/tidystat/blob/master/Rdev/00_base_program/function.checkpoint.dev.r
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
# if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$env.internal")) env.custom$env.internal = new.env()
if(!exists("env.custom$info")) env.custom$info = list()
#% get_system_info() ====
env.custom$info$get_system_info = function() {
summary_list = list(
GUI = .Platform$GUI,
os_type = .Platform$OS.type,
os_sysname = as.character(Sys.info()["sysname"]),
os_version = as.character(Sys.info()["version"]),
machine_type = as.character(Sys.info()["machine"]),
machine_nodename = as.character(Sys.info()["nodename"]),
machine_cpu = if (.Platform$OS.type == "unix" & Sys.info()["sysname"] == "Darwin")
trimws(system("sysctl -n machdep.cpu.brand_string", intern=TRUE))
else if (.Platform$OS.type == "unix" & Sys.info()["sysname"] == "Linux")
trimws(system("awk '/model name/' /proc/cpuinfo | uniq | awk -F': ' '{print $2}'", intern=TRUE))
else if (.Platform$OS.type == "windows")
trimws(system("wmic cpu get name", intern=TRUE)[2])
else NA,
Sys.getlocale = list(
LC_COLLATE = Sys.getlocale(category = "LC_COLLATE"),
LC_CTYPE = Sys.getlocale(category = "LC_CTYPE"),
LC_locale_NUMERIC = Sys.getlocale(category = "LC_NUMERIC"),
LC_locale_TIME = Sys.getlocale(category = "LC_TIME")
),
l10n_info = list(
localization_UTF8 = l10n_info()$`UTF-8`,
localization_Latin1 = l10n_info()$`Latin-1`,
localization_codeset = l10n_info()$codeset,
localization_codepage = l10n_info()$codepage,
localization_system.codepage = l10n_info()$system.codepage
)
)
}
#@ end -----
# > ls.str(env.custom) #-----
# env.internal : <environment: 0x0000024c23596368>
# info : List of 1
#  $ get_system_info:function ()
#@ end ----
#@ source(file.path(env.custom$source$source.get_system_info$path, env.custom$source$source.get_system_info$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$tmp_objectname = "get_system_info"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]] = list()
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname = "get_system_info"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename = paste0(env.custom$source$source.get_system_info$objectname, ".source.r")
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath = ""
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_local, env.custom$source$source.get_system_info$subpath)
# env.custom$source$source.get_system_info$path = paste0(env.custom$source$path_github, env.custom$source$source.get_system_info$subpath)
t0 = Sys.time()
source(file.path(env.custom$source$source.get_system_info$path, env.custom$source$source.get_system_info$filename))
Sys.time() - t0 # Time difference of 0.6328301  secs
# https://github.com/mkim0710/tidystat/blob/master/Rdev/get_system_info.dev.r
# https://github.com/mkim0710/tidystat/blob/master/Rdev/00_base_program/function.get_cpu_internal.dev.r
# https://github.com/mkim0710/tidystat/blob/master/Rdev/00_base_program/function.checkpoint.dev.r
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
# if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$env.internal")) env.custom$env.internal = new.env()
if(!exists("env.custom$info")) env.custom$info = list()
#% get_system_info() ====
env.custom$info$get_system_info = function() {
summary_list = list(
GUI = .Platform$GUI,
os_type = .Platform$OS.type,
os_sysname = as.character(Sys.info()["sysname"]),
os_version = as.character(Sys.info()["version"]),
machine_type = as.character(Sys.info()["machine"]),
machine_nodename = as.character(Sys.info()["nodename"]),
machine_cpu = if (.Platform$OS.type == "unix" & Sys.info()["sysname"] == "Darwin")
trimws(system("sysctl -n machdep.cpu.brand_string", intern=TRUE))
else if (.Platform$OS.type == "unix" & Sys.info()["sysname"] == "Linux")
trimws(system("awk '/model name/' /proc/cpuinfo | uniq | awk -F': ' '{print $2}'", intern=TRUE))
else if (.Platform$OS.type == "windows")
trimws(system("wmic cpu get name", intern=TRUE)[2])
else NA,
Sys.getlocale = list(
LC_COLLATE = Sys.getlocale(category = "LC_COLLATE"),
LC_CTYPE = Sys.getlocale(category = "LC_CTYPE"),
LC_locale_NUMERIC = Sys.getlocale(category = "LC_NUMERIC"),
LC_locale_TIME = Sys.getlocale(category = "LC_TIME")
),
l10n_info = list(
localization_UTF8 = l10n_info()$`UTF-8`,
localization_Latin1 = l10n_info()$`Latin-1`,
localization_codeset = l10n_info()$codeset,
localization_codepage = l10n_info()$codepage,
localization_system.codepage = l10n_info()$system.codepage
)
)
}
#@ end -----
# > ls.str(env.custom) #-----
# env.internal : <environment: 0x0000024c23596368>
# info : List of 1
#  $ get_system_info:function ()
#@ end ----
#@ source(file.path(env.custom$source$source.get_system_info$path, env.custom$source$source.get_system_info$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$tmp_objectname = "get_system_info"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]] = list()
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname = "get_system_info"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename = paste0(env.custom$source$source.get_system_info$objectname, ".source.r")
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath = ""
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_local, env.custom$source$source.get_system_info$subpath)
# env.custom$source$source.get_system_info$path = paste0(env.custom$source$path_github, env.custom$source$source.get_system_info$subpath)
# t0 = Sys.time()
# source(file.path(env.custom$source$source.get_system_info$path, env.custom$source$source.get_system_info$filename))
# Sys.time() - t0 # Time difference of 0.6328301  secs
#@ source(file.path(env.custom$source$source.get_system_info$path, env.custom$source$source.get_system_info$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$tmp_objectname = "get_system_info"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]] = list()
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname = "get_system_info"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename = paste0(env.custom$source$source.get_system_info$objectname, ".source.r")
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath = ""
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_local, env.custom$source$source.get_system_info$subpath)
# env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_github, env.custom$source$source.get_system_info$subpath)
t0 = Sys.time()
source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename))
Sys.time() - t0 # Time difference of 0.6328301  secs
t0 = Sys.time()
source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename))
Sys.time() - t0 # Time difference of 0.6328301  secs
#@ source(file.path(env.custom$source$source.get_system_info$path, env.custom$source$source.get_system_info$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
# if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$env.internal")) env.custom$env.internal = new.env()
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$tmp_objectname = "get_system_info"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]] = list()
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname = env.custom$source$tmp_objectname
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename = paste0(env.custom$source$source.get_system_info$objectname, ".source.r")
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath = ""
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_local, env.custom$source$source.get_system_info$subpath)
# env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_github, env.custom$source$source.get_system_info$subpath)
t0 = Sys.time()
source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename))
Sys.time() - t0 # Time difference of 0.6328301  secs
#@ source(file.path(env.custom$source$source.get_system_info$path, env.custom$source$source.get_system_info$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
# if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$env.internal")) env.custom$env.internal = new.env()
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$tmp_objectname = "f_path.df_dirs_recursive.df_files"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]] = list()
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname = env.custom$source$tmp_objectname
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename = paste0(env.custom$source$source.get_system_info$objectname, ".source.r")
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath = ""
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_local, env.custom$source$source.get_system_info$subpath)
# env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_github, env.custom$source$source.get_system_info$subpath)
t0 = Sys.time()
source(file.path(env.custom$source$source.get_system_info$path, env.custom$source$source.get_system_info$filename))
#@ source(file.path(env.custom$source$source.get_system_info$path, env.custom$source$source.get_system_info$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
# if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$env.internal")) env.custom$env.internal = new.env()
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$tmp_objectname = "f_path.df_dirs_recursive.df_files"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]] = list()
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname = env.custom$source$tmp_objectname
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename = paste0(env.custom$source$source.get_system_info$objectname, ".source.r")
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath = ""
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_local, env.custom$source$source.get_system_info$subpath)
# env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_github, env.custom$source$source.get_system_info$subpath)
t0 = Sys.time()
source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename))
#@ source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
# if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$env.internal")) env.custom$env.internal = new.env()
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$tmp_objectname = "f_path.df_dirs_recursive.df_files"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]] = list()
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname = env.custom$source$tmp_objectname
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename = paste0(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$$objectname, ".source.r")
#@ source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
# if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$env.internal")) env.custom$env.internal = new.env()
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$tmp_objectname = "f_path.df_dirs_recursive.df_files"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]] = list()
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname = env.custom$source$tmp_objectname
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename = paste0(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname, ".source.r")
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath = ""
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_local, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath)
# env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_github, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath)
t0 = Sys.time()
source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename))
Sys.time() - t0 # Time difference of 0.6328301  secs
#@ source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
# if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$env.internal")) env.custom$env.internal = new.env()
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$tmp_objectname = "get_system_info"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]] = list()
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname = env.custom$source$tmp_objectname
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename = paste0(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname, ".source.r")
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath = ""
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_local, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath)
# env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_github, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath)
t0 = Sys.time()
source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename))
Sys.time() - t0 # Time difference of 0.6328301  secs
#@ source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename)) ----
# if(!exists("env.custom")) env.custom = new.env()
if(!exists("env.custom")) env.custom = list()
# env.custom = env.custom %>% as.environment
# if(!exists("env.internal", envir = env.custom)) env.custom$env.internal = new.env()
if(!exists("env.custom$env.internal")) env.custom$env.internal = new.env()
env.custom$source = list()
env.custom$source$path_local = "D:/OneDrive/[][Rproject]/github_tidystat"
env.custom$source$path_github = "https://github.com/mkim0710/tidystat/raw/master"
env.custom$source$tmp_objectname = "env.custom.fun.t.tribble_construct"
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]] = list()
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname = env.custom$source$tmp_objectname
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename = paste0(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$objectname, ".source.r")
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath = ""
env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_local, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath)
# env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path = paste0(env.custom$source$path_github, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$subpath)
t0 = Sys.time()
source(file.path(env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$path, env.custom$source[[paste0("source.", env.custom$source$tmp_objectname)]]$filename))
Sys.time() - t0 # Time difference of 0.6328301  secs
