#!/bin/sh
# https://chatgpt.com/c/18230911-9003-42ad-9e3f-071c3310a148
# https://chatgpt.com/c/8ba82847-f9b9-42d6-a66f-49e0b39867f0
#|________________________________________________________________________________|#  
#|%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|#  
#|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|#  
#|++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|#  
#|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|#  
#|________________________________________________________________________________|#  
#|%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|#  
# Maximum file size in bytes (10MB)
MAX_SIZE=$((10 * 1024 * 1024))
#|________________________________________________________________________________|#  
#|%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|#  
# Function to get file size
get_file_size() {
    filename="$1"
    if command -v stat > /dev/null 2>&1; then
        stat -c%s "$filename"  # stat is faster than wc, but may not be available on all systems
    else
        wc -c <"$filename"
    fi
}
#|________________________________________________________________________________|#  
#|%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|#  
# Find files larger than the maximum size
large_files=$(git diff --cached --name-only | while read -r filename; do  # read -r to prevent backslashes from being interpreted as escape characters
    if [ -f "$filename" ]; then
        # filesize=$(wc -c <"$filename")  # stat is faster than wc, but may not be available on all systems
        # filesize=$(stat -c%s "$filename")  # stat is faster than wc, but may not be available on all systems
        filesize=$(get_file_size "$filename")
            if [ "$filesize" -ge "$MAX_SIZE" ]; then
            echo "$filename"
        fi
    fi
done)
#|________________________________________________________________________________|#  
#|%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|#  
if [ -n "$large_files" ]; then
    echo "The following files are blocked from commit due to the pre-commit hook size limit: $(($MAX_SIZE / (1024 * 1024))) MB. Use the following commands as needed."
    for file in $large_files; do
        echo "git commit -m \"Add and commit $file --no-verify\" --no-verify"
    done
    exit 1
fi
# Allow the commit if no large files are found
exit 0
#|________________________________________________________________________________|#  
#|%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|#  
#|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|#  
#|++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|#  
#|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|#  
#|________________________________________________________________________________|#  
#|%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|#  
# Make the hook executable: Ensure the script is executable by running:
# chmod +x .git/hooks/pre-commit

# Force add and commit large files: If you need to commit a file larger than 10 MB, you can bypass (override) the hook by using the --no-verify option:
# git add path/to/largefile
# git commit -m "Add large file" --no-verify
